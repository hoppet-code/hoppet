module hoppet_git_state
  implicit none  

  character(len=*), parameter :: HOPPET_GIT_STATUS_UNO = "@GIT_F90_STATUS_UNO@"
  character(len=*), parameter :: HOPPET_GIT_AUTHOR_NAME = "@GIT_AUTHOR_NAME@"
  character(len=*), parameter :: HOPPET_GIT_AUTHOR_EMAIL = "@GIT_AUTHOR_EMAIL@"
  character(len=*), parameter :: HOPPET_GIT_HEAD_SHA1 = "@GIT_HEAD_SHA1@"
  character(len=*), parameter :: HOPPET_GIT_COMMIT_DATE_ISO8601 = "@GIT_COMMIT_DATE_ISO8601@"
  !character(len=*), parameter :: HOPPET_GIT_COMMIT_SUBJECT = "@GIT_COMMIT_SUBJECT@"
  character(len=*), parameter :: HOPPET_GIT_DESCRIBE = "@GIT_DESCRIBE@"
  !logical, parameter :: GIT_RETRIEVED_STATE = @GIT_RETRIEVED_STATE@
  !logical, parameter :: GIT_IS_DIRTY = @GIT_IS_DIRTY@

contains

  subroutine hoppet_print_git_state(idev,prefix)
    integer, intent(in) :: idev
    character(len=*), intent(in), optional :: prefix

    if (present(prefix)) then
        write(idev,'(a)',advance='no') trim(prefix)//" "
    end if
    write(idev,'(a)') "hoppet compiled git info: "//trim(HOPPET_GIT_HEAD_SHA1)&
       &              // " , " // HOPPET_GIT_COMMIT_DATE_ISO8601 // ", status: " &
       &              // trim(HOPPET_GIT_STATUS_UNO)
  end subroutine hoppet_print_git_state

end module hoppet_git_state

! bool GitMetadata::Populated() {
!     return @GIT_RETRIEVED_STATE@;
! }
! bool GitMetadata::AnyUncommittedChanges() {
!     return @GIT_IS_DIRTY@;
! }
! std::string GitMetadata::StatusUNO() {
!     return "@GIT_STATUS_UNO@";
! }
! std::string GitMetadata::AuthorName() {
!     return "@GIT_AUTHOR_NAME@";
! }
! std::string GitMetadata::AuthorEmail() {
!     return "@GIT_AUTHOR_EMAIL@";
! }
! std::string GitMetadata::CommitSHA1() {
!     return "@GIT_HEAD_SHA1@";
! }
! std::string GitMetadata::CommitDate() {
!     return "@GIT_COMMIT_DATE_ISO8601@";
! }
! std::string GitMetadata::CommitSubject() {
!     return "@GIT_COMMIT_SUBJECT@";
! }
! std::string GitMetadata::Describe() {
!     return "@GIT_DESCRIBE@";
! }